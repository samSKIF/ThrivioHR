Copy
Edit
Execute this EXACT task. Do not touch anything beyond what’s listed.
If any command fails, PRINT the error and STOP. Do not “fix” or scaffold.

GOAL
Document the agreed identity/auth/profile/import specs (global-unique email, first-login password change, batch-level domain mismatch policy for CSV/API, org/user social links), tracking events, and tenancy stance. Create a lean, professional data dictionary. Update architecture, roadmap, and replit notes. No code changes.

TOUCH ONLY
architecture.md
context/ROADMAP.md
replit.md
docs/data_dictionary.md

CHANGES
# 1) Update architecture.md (append/patch sections)
--- Begin Patch: architecture.md ---
@@
## Identity & Access (Updated)
- **Login options**: Email+Password (local), SSO (OIDC). Email is **globally unique** (one account → one organisation).
- **First login policy**: Admin/CSV/API-created users must change password on first login. Password policy: min 12 chars, zxcvbn ≥3, deny leaked/common; Argon2id + app pepper.
- **Org scoping**: Derive `org_id` from the user row; no org selector at login.
- **Roles**: Start with single role on `users` {`org_admin`,`employee`} (full RBAC later when needed).

## Organisation Social Presence (New)
- Org fields: `website_url`, `instagram_url`, `x_url` (normalize `twitter.com` → `x.com`), `linkedin_url` (company page only).
- Employee profile: `linkedin_url` on user profile.
- **URL-only**, `https://` required. Normalization and domain allow-lists enforced in BFF. Events emitted on change.

## Bulk User Import & Domain Mismatch (New)
- Two-step flow for CSV and API:
  1) **Validate** (no write): parse file/payload, check global email uniqueness, seat check (warn by default), **domain mismatches** vs `organization_domains`, duplicates.
  2) **Commit**: requires a **batch-level decision**: `acceptMismatches=true` to proceed; else 409 with preview summary.
- Persist an `import_jobs` record for audit; emit events (`user_bulk_preview`, `user_bulk_committed`, `domain_mismatch_accepted`).

## User Profile & Completion (New)
- PII in `user_profiles`: phone (E.164), birth date, home address (json), emergency contact (name/phone/relation), avatar, cover, interests (json), LinkedIn.
- **Profile completion**: server computes via rubric; cache % in profile; checklist UI in `/me`.

## Tracking & Insights (Seed)
- Minimal `events` stream in OLTP (auth/admin/profile/import events). Warehouse/AI later.

## Tenancy (Confirmed)
- Pooled Postgres today; every tenant row has `org_id`. Service-enforced scoping; DB RLS to roll out later.
- Upgrade paths: schema-per-tenant / DB-per-tenant for high-isolation customers.

--- End Patch

# 2) Update context/ROADMAP.md (add Big 3c spec + DoD; seed orgs; tracking)
--- Begin Patch: context/ROADMAP.md ---
@@
## Big 3c — Local Auth & User Management (NOW)
**Scope**
- Global-unique email accounts (no org selector at login).
- Admin/CSV/API create users → `password_reset_required=true`; enforce first-login password change.
- Password policy: min 12, zxcvbn≥3, deny leaked/common. Argon2id + pepper.
- Batch-level **domain mismatch** handling for CSV & API (validate → preview → commit with `acceptMismatches`).
- Minimal user profile (PII) + profile completion %.
- Org social links (URL-only): website, Instagram, X, LinkedIn. User LinkedIn in profile.
- Tracking events (auth/admin/import/profile). Simple admin audit view.

**Data**
- Tables (lean): `organizations` (+ social URLs), `users` (+ password flags), `user_profiles`, `organization_domains`, `import_jobs`, `sessions` (existing), `events`.
- **Seed (dev only)**: create orgs Canva/Loylogic/Jumia with super admins:
  - `admin@canva.com` / `admin@loylogic.com` / `admin@jumia.com` → temp password `Admin123` → must change on first login.

**Endpoints (BFF)**
- POST `/auth/login` (local); POST `/auth/password/change`
- POST `/orgs/:orgId/users` `{validateOnly? acceptMismatches?}`
- POST `/orgs/:orgId/users/import` `mode=validate|commit`
- GET `/auth/me`, GET `/events?filter=...`

**DoD**
- Login with email+password works; `/`→ `/login` if unauth, `/`→ `/me` if auth.
- First-login password change enforced with strength meter.
- CSV validate returns precise counts + mismatch list with suggestions; commit enforces batch-level accept/reject.
- API single-user path mirrors CSV with `validateOnly` and `acceptMismatches`.
- Org & user LinkedIn/website/X/IG validated (URL-only) and normalized; changes audited.
- Events emitted for login/profile/import; audit view shows import job summaries.
- Data dictionary updated.

## Big 4 — Directory (NEXT)
- After 3c, expand departments/locations/org tree + CSV import V2. (Full PRD to follow.)

--- End Patch

# 3) Update replit.md (add “how to verify” for 3c without code changes)
--- Begin Patch: replit.md ---
@@
## 2025-08-21 / 2025-08-22 — Docs & Auth Specs
- Added Local Auth & User Management spec (global email, first-login change, batch domain mismatch for CSV/API).
- Added org/user social URLs (URL-only + normalization).
- Added seed orgs (dev only) and tracking events scope.
- Created `docs/data_dictionary.md`.

## How to smoke-check (doc-only)
- Build still green: `npx nx build bff --skip-nx-cache && npx nx build web --skip-nx-cache`
- Identity tests still pass: `npx nx test identity --watchAll=false --reporters=default`
- Confirm docs: `sed -n '1,160p' docs/data_dictionary.md`

> Next prompt will introduce migrations & endpoints; this one documents the plan only.
--- End Patch

# 4) Create docs/data_dictionary.md (lean, only needed fields; no long sentences in tables)
--- Begin File: docs/data_dictionary.md ---
# ThrivioHR Data Dictionary (Lean v1)

## Tenancy
- Pooled Postgres; tenant rows include `org_id`.
- Service-enforced scoping; DB RLS later.
- Upgrade path: schema-per-tenant / DB-per-tenant.

## organizations
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| name | text | yes |  |
| slug | text unique | yes | url-safe |
| status | enum(active, suspended, trial, closed) | yes |  |
| timezone | text | no | IANA |
| primary_currency | char(3) | no | ISO-4217 |
| website_url | text | no | https://… |
| instagram_url | text | no | instagram.com only |
| x_url | text | no | x.com (normalize twitter.com) |
| linkedin_url | text | no | linkedin.com/company/... |
| created_at | timestamptz | yes |  |
| updated_at | timestamptz | yes |  |

## users
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| org_id | uuid fk(organizations) | yes |  |
| email | citext unique(global) | yes | 1 email → 1 org |
| password_hash | text | no | null for SSO |
| role | enum(org_admin, employee) | yes |  |
| status | enum(active, invited, disabled) | yes |  |
| password_reset_required | bool | yes | default true for admin/CSV/API |
| password_changed_at | timestamptz | no |  |
| last_login_at | timestamptz | no |  |
| created_at | timestamptz | yes |  |

## user_profiles
| field | type | req | notes |
|---|---|---|---|
| user_id | uuid pk/fk(users) | yes | 1:1 |
| first_name | text | no |  |
| last_name | text | no |  |
| phone_e164 | text | no | +971… |
| birth_date | date | no |  |
| home_address_json | jsonb | no | {line1,city,zip,country} |
| emergency_contact_name | text | no |  |
| emergency_contact_phone_e164 | text | no |  |
| emergency_contact_relation | text | no |  |
| avatar_url | text | no |  |
| cover_url | text | no |  |
| interests_json | jsonb | no | ["wellness","tech"] |
| linkedin_url | text | no | linkedin.com/in/... |
| profile_completion_pct | int | no | cached 0–100 |
| profile_checklist_state_json | jsonb | no | checklist flags |
| updated_at | timestamptz | yes |  |

## organization_domains
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| org_id | uuid fk(organizations) | yes |  |
| domain | citext unique | yes | 1 domain → 1 org |
| is_primary | bool | yes | default true |
| created_at | timestamptz | yes |  |

## import_jobs
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| org_id | uuid fk(organizations) | yes |  |
| created_by | uuid fk(users) | yes | admin |
| source | enum(csv, api) | yes |  |
| status | enum(validated, committed, rejected) | yes |  |
| total_rows | int | yes |  |
| valid_rows | int | yes |  |
| mismatch_rows | int | yes |  |
| duplicate_rows | int | yes |  |
| accepted_mismatches | bool | no | default false |
| mismatch_domains | jsonb | no | ["gmial.com", …] |
| report_url | text | no | s3://… |
| created_at | timestamptz | yes |  |
| committed_at | timestamptz | no |  |
| rejected_at | timestamptz | no |  |

## subscriptions (minimal, no billing yet)
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| org_id | uuid fk(organizations) | yes |  |
| plan_code | text | yes |  |
| seats_limit | int | yes |  |
| status | enum(trial, active, past_due, canceled, expired) | yes |  |
| start_at | timestamptz | yes |  |
| end_at | timestamptz | no |  |
| created_at | timestamptz | yes |  |

## sessions (existing; reference)
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| user_id | uuid fk(users) | yes |  |
| refresh_token_hash | text | yes |  |
| ip | text | no |  |
| user_agent | text | no |  |
| created_at | timestamptz | yes |  |
| expires_at | timestamptz | yes |  |

## events (tracking seed)
| field | type | req | notes |
|---|---|---|---|
| id | uuid pk | yes |  |
| org_id | uuid | yes |  |
| user_id | uuid | no | null for system |
| event_type | text | yes | login_success, password_changed, user_bulk_preview, user_bulk_committed, domain_mismatch_accepted, profile_updated |
| metadata_json | jsonb | no |  |
| timestamp | timestamptz | yes |  |

## Notes
- No roles m:n join yet; single role on `users` until RBAC is needed.
- Directory tables (departments/locations/units) land with Big 4.
- Marketplace/ledger/social feed tables wait for PRDs; not included here to avoid bloat.

--- End File

RUN & PRINT
echo "=== Build web & bff (should still pass; docs-only change) ==="
npx nx build web --skip-nx-cache || true
npx nx build bff --skip-nx-cache || true

echo "=== Identity tests (should pass) ==="
npx nx test identity --watchAll=false --reporters=default | tail -n 30 || true

echo "=== Docs presence checks ==="
sed -n '1,120p' docs/data_dictionary.md
grep -n "Local Auth & User Management" context/ROADMAP.md || true
grep -n "Domain Mismatch" architecture.md || true

echo "=== Confirm where we are vs the roadmap and if there is any regression in previous features. ==="
STOP.
